# Template configuration. Replace:
# + {{ site_root }} with the site root
# + {{ domain_name }} with ALLOWED_HOST
# + {{ export_prefix }} with EXPORT_PREFIX

upstream gunicorn_{{ domain_name }} {
    server unix:{{ site_root }}/sock/gunicorn;
}

server {
    listen 80;
    server_name {{ domain_name }};
    access_log /var/log/nginx/{{ domain_name }}.access.log;
    error_log /var/log/nginx/{{ domain_name }}.error.log;

    # Let's Encrypt challenges come in on HTTP/80
    location /.well-known/acme-challenge/ {
        alias /etc/letsencrypt/challenges/;
        try_files $uri =404;
    }
    
    try_files $uri @gunicorn;
    
    # Serve static files which django's whitenoise won't know about and which
    # won't be requested with the /static/ prefix.
    location /favicon.ico {
        alias {{ site_root }}/cotracker/static/favicon.ico;
    }
    
    location /robots.txt {
        alias {{ site_root }}/cotracker/static/robots.txt;
    }
    
    # The pilot weight exports are requested with the /static/ prefix, but
    # whitenoise still doesn't know about them because they're generated by
    # the application during runtime.
    location /static/{{ export_prefix }}_pilotweights.json {
        # Enable client web applications to retrieve this data (just the JSON
        # format, they don't care about the XML version)
        add_header 'Access-Control-Allow-Origin' '*';
        alias {{ site_root }}/cotracker/static/{{ export_prefix }}_pilotweights.json;
    }
    
    location /static/{{ export_prefix }}_pilotweights.xml {
        alias {{ site_root }}/cotracker/static/{{ export_prefix }}_pilotweights.xml;
    }
    
    location @gunicorn {
        proxy_pass http://gunicorn_{{ domain_name }};
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Request-Start "t=${msec}";
    }
}

