# Template configuration. Replace:
# + /home/ubuntu/checkniner with the site root
# + example.com with ALLOWED_HOST
# + exportprefix with EXPORT_PREFIX

upstream gunicorn {
    server unix:/home/ubuntu/checkniner/sock/gunicorn;
}

server {
    listen 80;
    server_name example.com;
    access_log /var/log/nginx/checkniner.access.log;
    error_log /var/log/nginx/checkniner.error.log;
    
    try_files $uri @gunicorn;
    
    # Serve static files which django's whitenoise won't know about and which
    # won't be requested with the /static/ prefix.
    location /favicon.ico {
        alias /home/ubuntu/checkniner/cotracker/static/favicon.ico;
    }
    
    location /robots.txt {
        alias /home/ubuntu/checkniner/cotracker/static/robots.txt;
    }
    
    # The pilot weight exports are requested with the /static/ prefix, but
    # whitenoise still doesn't know about them because they're generated by
    # the application during runtime.
    location /static/exportprefix_pilotweights.json {
        # Enable client web applications to retrieve this data (just the JSON
        # format, they don't care about the XML version)
        add_header 'Access-Control-Allow-Origin' '*';
        alias /home/ubuntu/checkniner/cotracker/static/exportprefix_pilotweights.json;
    }
    
    location /static/exportprefix_pilotweights.xml {
        alias /home/ubuntu/checkniner/cotracker/static/exportprefix_pilotweights.xml;
    }
    
    location @gunicorn {
        proxy_pass http://gunicorn;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# Don't let requests for unrecognized server names propagate upstream
server {
    listen 80 default_server;
    server_name _;
    return 404;
}

